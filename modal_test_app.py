# ðŸš€ Modal Deployment Script (Minimum Configuration)
# Generated by modal-for-noobs - https://github.com/arthrod/modal-for-noobs
# Deployment Mode: minimum
# Features: Basic Gradio deployment with minimal dependencies
# Timeout: 3600s

import modal
from fastapi import FastAPI
import gradio as gr
from gradio.routes import mount_gradio_app

# Configuration constants
APP_NAME = "test-app"
APP_TITLE = "test-app - Modal Deployment"
APP_DESCRIPTION = "Minimal deployment with essential features"
DEPLOYMENT_MODE = "minimum"

# Create Modal App
app = modal.App(APP_NAME)

# Container Image Configuration (Minimal)
image = (
    modal.Image.debian_slim(python_version="3.11")
    .pip_install(
        "gradio",
        "fastapi[standard]",
        "uvicorn",
        "httpx",
        "markdown2"
    )
)

# Original Application Code
"""Simple test Gradio app for testing modal-for-noobs deployment."""

import gradio as gr


def greet(name):
    """Greet function for testing."""
    return f"Hello {name}! ðŸš€ Deployed with modal-for-noobs!"


# Create the Gradio interface
demo = gr.Interface(
    fn=greet,
    inputs=gr.Textbox(label="Your Name", placeholder="Enter your name here..."),
    outputs=gr.Textbox(label="Greeting"),
    title="ðŸš€ Modal for Noobs Test App",
    description="A simple test app to verify modal-for-noobs deployment works perfectly!",
    theme=gr.themes.Soft()
)

if __name__ == "__main__":
    demo.launch()

# Modal Function Configuration
@app.function(
    image=image,
    min_containers=1,
    max_containers=10,
    timeout=3600,
    memory=8192,
    cpu=2.0,
)
@modal.concurrent(max_inputs=100)
@modal.asgi_app()
def deploy_gradio():
    """Deploy Gradio app with minimal Modal configuration."""
    
    # Detect Gradio Interface
    demo = None
    interface_names = ['demo', 'app', 'interface', 'iface']
    
    for name in interface_names:
        if name in globals() and hasattr(globals()[name], 'launch'):
            demo = globals()[name]
            break
    
    if demo is None:
        for var_name, var_value in globals().items():
            if hasattr(var_value, 'queue') and hasattr(var_value, 'launch'):
                demo = var_value
                break
    
    if demo is None:
        raise ValueError("Could not find Gradio interface")
    
    # Configure demo queue
    demo.queue(max_size=10)
    
    # FastAPI Setup
    fastapi_app = FastAPI(
        title=APP_TITLE,
        description=APP_DESCRIPTION,
        version="1.0.0"
    )
    
    # Mount Gradio app
    return mount_gradio_app(fastapi_app, demo, path="/")

if __name__ == "__main__":
    app.run()